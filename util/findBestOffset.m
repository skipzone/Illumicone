function bestOffset = findBestOffset( ...
    of, ...
    ringCircumference, ...
    couplerCenterPositions, ...
    couplerLength, ...
    numTiedowns, ...
    tiedownRadius)
% findBestOffset
% Finds the best tie-down position offset according to these critera:
%     1) places the fewest tie-downs in couplers
%     2) requires the least overall relocation of tie-downs to move them out
%        of the couplers

offsetStep = tiedownRadius;

offsets = ...
    couplerLength / 2 + tiedownRadius ...
    : offsetStep ...
    : ringCircumference / numTiedowns - (couplerLength / 2 + tiedownRadius);

overlapCount = zeros(size(offsets));
overlappedCouplers = zeros(size(offsets, 2), numTiedowns, 2);

% Find the overlaps between tie-downs and couplers for all offsets.
for offsetIdx = 1 : size(offsets, 2)
    %fprintf(of, '----- %d tie-downs, offset %d = %g inches -----\n', ...
    %    numTiedowns, offsetIdx, offsets(offsetIdx));
    [overlapCount(offsetIdx) overlappedCouplers(offsetIdx, :, :)] = ...
        findTiedownInCoupler( ...
            ringCircumference, ...
            couplerCenterPositions, ...
            couplerLength, ...
            numTiedowns, ...
            tiedownRadius, ...
            offsets(offsetIdx));
end

% Identify the offsets that produce the fewest tie-downs located in a
% coupler.
fewestConflictIdxs = find(overlapCount == min(overlapCount));

% The best offset is the one that, overall, places the tie-downs farthest from
% the centers of the couplers, thus required the smallest overall adjustment of
% the tie-downs to move them out of the couplers.  We use the log of the
% distance to favor offsets having tie-downs a moderate distance from
% coupler centers over those having an offset very far from a coupler
% center but another very near.
weightedDistances = ...
    sum(log(abs(overlappedCouplers(fewestConflictIdxs, :, 2)) + 1), 2);
bestOffsetIdx = ...
    fewestConflictIdxs( ...
        find(weightedDistances == max(weightedDistances), 1));
bestOffset = offsets(bestOffsetIdx);
    
fprintf(of, ...
    'best %d-string offset is %d, measuring %g inches and producing %d overlaps:\n', ...
    numTiedowns, bestOffsetIdx, bestOffset, overlapCount(bestOffsetIdx));
for j = 1 : overlapCount(bestOffsetIdx)
    fprintf(of, ...
        '    coupler %d at %.4g" from center\n', ...
        overlappedCouplers(bestOffsetIdx, j, 1), ...
        overlappedCouplers(bestOffsetIdx, j, 2));
end
