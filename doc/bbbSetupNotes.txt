27 Nov. 2021 -- Wheezy End-of-Life
==================================

As of 27 Nov. 2021, apt-get update no longer works with the existing URLs in
/etc/apt/sources.list.  Comment out the existing debian.org URLs, and add
these:

    # 2021-11-27:  Wheezy is EOL'd, and the above URLs are invalid.  These work,
    # but there's really no reason to use them because there have been no updates
    # since May 2018.
    deb http://archive.debian.org/debian wheezy main
    deb http://archive.debian.org/debian-security wheezy/updates main

Of course, if the strdrv host was updated at some point since May 2018, there
are no more updates, so there is no point in trying.

Source:  https://serverfault.com/questions/960970/wheezy-updates-on-archive-debian-org-returns-404-not-found


================================================================================
================================================================================


7/7/2018 -- Set up ic-strdrv on a BeagleBone Black or Green using Debian Wheezy
===============================================================================

-1.  /// WARNING ///  At the cost of 2 BeagleBone Blacks and 1 BeagleBone Green,
     we have discovered that, just before or after the second boot, GPIO_48,
     which is the output for string 45 (zero-based), gets destroyed.  The likely
     cause is something setting GPIO1_16 (GPIO_48) and GPIO2_0 (not exposed) to
     outputs.  The two GPIOs are connected together through zero-ohm R160 and
     R161 for reasons that are not apparent.  If/when they are both configured
     as outputs but not in the same high/low state, excessive current will flow
     betweenn them, damaging one or both.  The symptom is that string 45 works
     fine after the first boot but ceases to work after a subsequent boot.
     GPIO_48 appears to work if toggled manually and observed with a voltmeter,
     but the WS281x data signal viewed on an oscilloscope is very far from
     alright.
     
     To prevent GPIO_48 from being treated like Zed treated Marsellus Wallace,
     be sure to remove R161 before starting this procedure.  (On a BBB, R161 is
     located near P8 (yes, P8) pin 15.)  That will disconnect GPIO2_0, which
     you can't use anyway.  (Who is Zed?  Zed's dead, baby.  Zed's dead.)


0.  Write the image to a 4 GB micro-SD card.

    Download and uncompress this image (newer ones don't support uio_pruss,
    which is needed by LEDscape to talk to the PRUs):

        https://debian.beagleboard.org/images/bone-debian-7.11-lxde-4gb-armhf-2016-06-15-4gb.img.xz

    If you are using macOS:

        Insert the SD card (in an adapter) into the SD slot of your computer
        or a USB SD adapter.

        diskutil list

        Look for what is the SD card.  Note the N in /dev/diskN.

        diskutil unmountDisk /dev/diskN

        Assuming the Wheezy image file is in the current working directory...

        sudo dd bs=1m if=bone-debian-7.11-lxde-4gb-armhf-2016-06-15-4gb.img of=/dev/rdiskN

        (The r in rdiskN is not a typo.  rdiskN is the raw device with which IO
        is much, much faster.)
        
        If you're impatient and/or worried that nothing is happening, type
        ctrl-T to get an update of how much dd has transferred.

        diskutil unmountDisk /dev/diskN

    If you are using Linux, you need to figure out which is the SD card device.
    Then, use dd as shown above.  If you're using Windows, well, you poor
    bastard.  Go google how to write a disk image to an SD card.  Or, make your
    life easier:  Go get a MacBook Pro, preferrably an older one with an SD
    slot.  Or, get a cheap laptop and put Linux on it.  If you have an extra
    monitor, keyboard, and mouse lying around, a Raspberry Pi 4 makes a fine
    development system.  There are instructions in Illumicone/doc for setting
    one up for development  You'll thank yourself later when you don't have to
    deal with the hassle of trying to work in a POSIX world using a crippled,
    non-standard system with a shitty user interface.


1.  Update everything.

    Boot from the micro-SD card, ssh to beaglebone.local, and log in as
    debian/temppwd.

    ssh debian@beaglebone.local
    sudo apt-get update
    sudo apt-get upgrade

    Reboot.


2.  Create user illumicone and add it to the sudo and groups.

    sudo adduser illumicone
    sudo adduser illumicone sudo
    sudo adduser illumicone adm


3.  Change user debian's password to be the same as illumicone's.

    passwd

    Remove the "default username:password" line from /etc/issue and
    /etc/issue.net.

    log in as illumicone


4.  Set up ssh keys.

    on development system:  scp ~/.ssh/id_rsa.pub illumicone@beaglebone.local:myrsa.pub

    mkdir .ssh
    cd .ssh
    ssh-keygen
    mv ../myrsa.pub authorized_keys
    chmod 600 authorized_keys


5.  Set the host name to ic-strdrv.

    Change all occurrences of "beaglebone" to "ic-strdrv" in /etc/hostname and
    /etc/hosts.

    Reboot.

    Note:  On the Mini-Cone/backup controller, set the host name to ic2-strdrv.
    Use ic2-strdrv everywhere ic-strdrv is referenced in this document.


6.  Create .bash_aliases

    on development system:  scp ~/devl/Illumicone/sbin/bash_aliases illumicone@ic-strdrv.local:.bash_aliases


7.  Set up time zone and NTP.

    sudo apt-get install ntp

    Add this above the existing server lines in /etc/ntp.conf:

        # On Illumicone's LAN, ic-widpatcon has the RTC and is an NTP server.
        server 192.168.69.103

    sudo dpkg-reconfigure tzdata
        America
        Boise

    Note:  On ic2-strdrv, use 192.168.69.113, which is ic2-widpatcon's IP
    address.


8.  Install required and useful packages.

    sudo apt-get install psmisc git-flow

    (psmisc gives us the killall utility.)


9.  Set up the Illumicone project.

    cd
    mkdir devl
    cd devl
    git clone https://github.com/skipzone/Illumicone.git
    cd Illumicone
    git flow init
        Take all defaults.
    cp ~/devl/Illumicone/config/vimrc ~/.vimrc
    git config --global core.editor "vim"


10.  Disable HDMI.

    On a BeagleBone Green, this step is not necessary because the Green does not
    have HDMI.  On the BeagleBone Black, enable the following cape_disable line
    in /boot/uEnv.txt:

        ##Disable HDMI (v3.8.x)
        cape_disable=capemgr.disable_partno=BB-BONELT-HDMI,BB-BONELT-HDMIN


11.  Set up LEDscape.

    Get Yona Appletree's fork.

        cd ~/devl
        git clone git://github.com/Yona-Appletree/LEDscape
        cd LEDscape

    The modifications to opc-server.c described below have already been done
    to Illumicone/src/opc-server.c.  You can simply copy that file to
    LEDscape.  The changes are described below for reference.  (Yeah, yeah, I
    know.  Fork, fix, and pull request would be the right thing to do.)

    Fix a bug in join_multicast_group_on_all_ifaces in opc-server.c by changing
    this (starting on line 1781):

        while ( cursor != NULL ) {
            if ( cursor->ifa_addr->sa_family == AF_INET
                && !(cursor->ifa_flags & IFF_LOOPBACK)

    to this:

        while ( cursor != NULL ) {
            if ( cursor->ifa_addr != NULL   // ifa_addr can be null for some interfaces
                && cursor->ifa_addr->sa_family == AF_INET
                && !(cursor->ifa_flags & IFF_LOOPBACK)

    While you're at it, fix the problem of not seeing opc-server messages
    promptly in the system log by adding this fflush call after each printf
    call (and after any mutex release but before any sleep) in render_thread:

        fflush(stdout);

    In Makefile, change line 33 from this:

        -D_DEFAULT_SOURCE \

    to this:

        -D_BSD_SOURCE \

    Why?  The bone-debian-7.11-lxde-4gb-armhf-2016-06-15-4gb image has an older
    glibc.  Thanks to Ashoat for this solution.  See his/her comment here:
    https://www.bountysource.com/issues/44236677-compilation-failure

    sudo cp ~/devl/Illumicone/config/ledscape-config-*.json /etc/

    If configuring for Illumicone (the big cone):

        sudo ln -s /etc/ledscape-config-illumicone48.json /etc/ledscape-config.json

    If configuring for Mini-Cone:

        sudo ln -s /etc/ledscape-config-minicone.json /etc/ledscape-config.json

    make

    sudo cp /boot/dtbs/$(uname -r)/am335x-boneblack.dtb{,.preledscape_bk}
    sudo cp /boot/dtbs/$(uname -r)/am335x-bonegreen.dtb{,.preledscape_bk}
    sudo cp devicetree/am335x-boneblack.dtb /boot/dtbs/$(uname -r)/
    sudo cp devicetree/am335x-bonegreen.dtb /boot/dtbs/$(uname -r)/

    sudo modprobe -v uio_pruss

    reboot

    Check:

        lsmod | grep uio

    Output should be:

        uio_pruss               4066  0

    Install the service.

        sudo ./install-service.sh

    Use these commands to stop and start the service:

        sudo systemctl stop ledscape.service
        sudo systemctl start ledscape.service

    You can see if the service is running with this:

        systemctl status ledscape.service

    Output from the service (opc-server, actually) will appear in
    /var/log/syslog and /var/log/daemon.log.  The messages will appear in
    batches every 5-7 minutes if you didn't add the fflush calls as suggested
    above.

    To see if LEDscape is running, use this:  sudo tail syslog
    You should see messages that look like this:

        Nov 27 11:38:00 ic-strdrv run-ledscape[621]: [render] fps_info={frame_avg_usec: 1202, possible_fps: 831.95, actual_fps: 828.50, sample_frames: 8285}


12.  Assign static IP address 192.168.69.100 for ic-strdrv on wired network.

    Modify the eth0 section of /etc/network/interfaces as follows:

        auto eth0
        iface eth0 inet static
            address 192.168.69.100
            netmask 255.255.255.0
            network 192.168.69.0   <-- not sure if this is needed
            gateway 192.168.69.1

    Also, comment out this section to prevent udhcpd from starting.

        # Ethernet/RNDIS gadget (g_ether)
        # Used by: /opt/scripts/boot/autoconfigure_usb0.sh
        #iface usb0 inet static
        #    address 192.168.7.2
        #    netmask 255.255.255.252
        #    network 192.168.7.0
        #    gateway 192.168.7.1

    20 July 2022:  For years now, the IP address--which is supposed to be
    static--would sporadically end up changing due to DHCP mysteriously
    becoming enabled.  Turns out that dhclient is started by something when
    the eth0 link goes down.  Finding that something has been elusive.  As a
    workaround to prevent ic-strdrv from becoming unreachable at its static
    IP address whenever the network goes down, rename dhclient to disable it.
    In /sbin:

        sudo mv dhclient dhclient.disabled

    reboot

    Note:  For ic2-strdrv, assign 192.168.69.110.


13.  After you have determined that everything is working correctly, write the
     image to the on-board flash.

    Enable the following line in /boot/uEnv.txt:

        ##enable Generic eMMC Flasher:
        ##make sure, these tools are installed: dosfstools rsync
        cmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh

    reboot

    The 4 user LEDs will flash in succession while the image is being written.
    When complete, the LEDs will be off, and the board will be powered down
    automatically.  This can take up to ten minutes.

    Removed the micro-SD card and reboot from the on-board flash.


14.  Disable writing to the on-board flash.

    THIS STEP IS IMPORTANT!  If you leave the SD card configured for writing
    to the on-board flash, forget that you did, then attempt to boot from it
    later, you will wipe out any work you have done to the system in the
    on-board flash.  It sucks when that happens.

    Boot the BeagleBone from the on-board flash (i.e., without the SD card
    inserted).

    Insert the SD card while the system is running.

    sudo mkdir /media/card

    sudo mount -v /dev/mmcblk1p1 /media/card

    Comment out this line in /media/card/boot/uEnv.txt:

        #cmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh

    sudo umount /media/card

    Remove the SD card.



================================================================================
================================================================================


9/24/2017 -- Set up ic-strdrv on a BeagleBone Green using Debian Jessie
=======================================================================

2/3/2018  This seemed like a good idea at the time, and it was a good exercise
in learning how to enable uio_pruss.  Although Jessie can be made to work with
LEDscape, there is a problem of certain pixels on all strings flickering.  The
problem is most noticeable (and irritating) when all pixels are set to black.
Finding and fixing the problem would be fun and instructive, but the easier
path is to use Wheezy instead.

0.  Write the image to a micro-SD card.

    Download and uncompress this image (newer ones don't support uio_pruss,
    which is needed by LEDscape to talk to the PRUs):
        https://debian.beagleboard.org/images/bone-debian-8.6-iot-armhf-2016-11-06-4gb.img.xz

    diskutil list
    diskutil unmountDisk /dev/diskN
    sudo dd bs=1m if=bone-debian-8.6-iot-armhf-2016-11-06-4gb.img of=/dev/rdiskN
    diskutil unmountDisk /dev/diskN


1.  Update everything.

    Boot from the micro-SD card, ssh to beaglebone.local, and log in as
    debian/temppwd.

    sudo apt-get update
    sudo apt-get upgrade

    Reboot.


2.  Create user illumicone and add it to the sudo and adm groups.

    sudo adduser illumicone
    sudo adduser illumicone sudo
    sudo adduser illumicone adm


3.  Change user debian's password to be the same as illumicone's.

    passwd

    Remove the "default username:password" line from /etc/issue and
    /etc/issue.net.

    log in as illumicone


4.  Set up ssh keys.

    on development system:  scp ~/.ssh/id_rsa.pub illumicone@beaglebone.local:myrsa.pub

    mkdir .ssh
    cd .ssh
    ssh-keygen
    mv ../myrsa.pub authorized_keys
    chmod 600 authorized_keys


5.  Set the host name to ic-strdrv.

    Change all occurrences of "beaglebone" to "ic-strdrv" in /etc/hostname and
    /etc/hosts.

    Reboot.


6.  Create .bash_aliases

    on development system:  scp ~/devl/Illumicone/sbin/bash_aliases illumicone@ic-strdrv.local:.bash_aliases


7.  Set up time zone and NTP.

    sudo apt-get install ntp

    Add this above the existing server lines in /etc/ntp.conf:

        # On Illumicone's LAN, ic-widcon has the RTC and is an NTP server.
        server 192.168.69.102
        server 192.168.69.103

    sudo timedatectl set-timezone America/Boise


8.  Install required and useful packages.

    sudo apt-get install psmisc git-flow

    (psmisc gives us the killall utility.)


9.  Set up the Illumicone project.

    cd
    mkdir devl
    cd devl
    git clone https://github.com/skipzone/Illumicone.git
    cd Illumicone
    git flow init
        Take all defaults.
    cp ~/devl/Illumicone/config/vimrc ~/.vimrc
    git config --global core.editor "vim"


10.  Disable HDMI.

    The BeagleBone Green does not have HDMI, so this step should not be
    necessary (per Yona Appletree, https://devhub.io/repos/Yona-Appletree-LEDscape).
    For the record and in case a BBB is used instead, enable this line in
    /boot/uEnv.txt to disable HDMI:
        ##BeagleBone Black: HDMI (Audio/Video) disabled:
        dtb=am335x-boneblack-emmc-overlay.dtb
    Note that the dts and dtb file names in the next step will need to be
    am335x-boneblack-emmc-overlay instead of am335x-bonegreen.


11.  Enable uio_pruss (interface to PRUs).

    Back up existing compiled device tree file.
        sudo cp /boot/dtbs/$(uname -r)/am335x-bonegreen.dtb{,.original}

    Modify device tree to enable pruss.
        cd /opt/source/dtb-4.4-ti/src/arm
        su debian
        cp am335x-bonegreen.dts am335x-bonegreen.dts.original
        Disable remoteproc and enable uio in am335x-bonegreen.dts.
            Enable this line:  #include "am33xx-pruss-uio.dtsi"
            Comment out this line:  /* #include "am33xx-pruss-rproc.dtsi" */

    Compile device tree and copy to boot directory.
        cd /opt/source/dtb-4.4-ti
        sudo ln -s /usr/bin/dtc /usr/bin/dtc-v4.1.x
        make src/arm/am335x-bonegreen.dtb
        sudo cp src/arm/am335x-bonegreen.dtb /boot/dtbs/4.4.30-ti-r64/
        exit

    Put remoteproc on module blacklist.
        sudo cp /etc/modprobe.d/pruss-blacklist.conf pruss-blacklist.conf.original
        Replace this line in /etc/modprobe.d/pruss-blacklist.conf:
            blacklist uio_pruss
        with these:
            blacklist pruss
            blacklist pruss_intc
            blacklist pru-rproc
        If the file doesn't exist, create it, and populate it with the three
        lines above.

    Reboot.

    Check:
        lsmod | grep uio
    Output should be:
        uio_pruss       4928 0
        uio_pdrv_genirq 3539 0
        uio             8822 2 uio_pruss,uio_pdrv_genirq
    This is the wrong output:
        illumicone@ic-strdrv:~$ lsmod | grep uio
        uio_pdrv_genirq         3923  0 
        uio                    10524  1 uio_pdrv_genirq


12.  Set up LEDscape.

    Get Yona Appletree's fork.
        cd ~/devl
        git clone git://github.com/Yona-Appletree/LEDscape
        cd LEDscape

    Fix a bug in join_multicast_group_on_all_ifaces in opc-server.c by changing
    this:
        while ( cursor != NULL ) {
            if ( cursor->ifa_addr->sa_family == AF_INET
                && !(cursor->ifa_flags & IFF_LOOPBACK)
    to this:
        while ( cursor != NULL ) {
            if ( cursor->ifa_addr != NULL   // ifa_addr can be null for some interfaces
                && cursor->ifa_addr->sa_family == AF_INET
                && !(cursor->ifa_flags & IFF_LOOPBACK)

    While you're at it, fix the problem of not seeing opc-server messages
    promptly in the system log by adding this fflush call after each printf
    call (and after any mutex release but before any sleep) in render_thread:
        fflush(stdout);

    sudo cp ~/devl/Illumicone/config/ledscape-config-*.json /etc/
    If configuring for Illumicone (the big cone):
        sudo ln -s /etc/ledscape-config-illumicone.json /etc/ledscape-config.json
    If configuring for Mini-Cone:
        sudo ln -s /etc/ledscape-config-minicone.json /etc/ledscape-config.json

    make

    Install the service.
        sudo ./install-service.sh

    Use these commands to stop and start the service:
        sudo systemctl stop ledscape.service
        sudo systemctl start ledscape.service

    You can see if the service is running with this:
        systemctl status ledscape.service

    Output from the service (opc-server, actually) will appear in
    /var/log/syslog and /var/log/daemon.log.  The messages will appear in
    batches every 5-7 minutes if you didn't add the fflush calls as suggested
    above.

    Alternatively, you can use journalctl to view the output.
        sudo adduser illumicone systemd-journal
        Log out/in.
        To see all entries (with less-style pagination), starting with oldest:
            journalctl _SYSTEMD_UNIT=ledscape.service
        To see current entries as they are written:
            journalctl -f _SYSTEMD_UNIT=ledscape.service

13.  Fix the bug in /etc/rsyslog.conf.

    A bug in the rsyslog config causes /dev/xconsole buffer to fill up.  See
    https://raspberrypi.stackexchange.com/questions/47781/what-is-action-17

    Comment out these lines in /etc/rsyslog.conf:
        #daemon.*;mail.*;\
        #        news.err;\
        #        *.=debug;*.=info;\
        #        *.=notice;*.=warn       |/dev/xconsole

    sudo systemctl restart rsyslog.service


14.  Assign static IP address 192.168.69.100 for ic-strdrv on wired network.

    sudo connmanctl services
    Note which service is ethernet_hexshit_cable.
    sudo connmanctl config ethernet_hexshit_cable --ipv4 manual 192.168.69.100 255.255.255.0 192.168.69.1 --nameservers 192.168.69.1 8.8.8.8
  
    Your ssh connection will go away because the address change will be
    immediate.  So, it is best to do this step when ic-strdrv is on the
    illumicone network because you won't be able to reconnect to it and
    shut it down nicely otherwise.


15.  Write the image to the on-board flash.

    Enable the following line in /boot/uEnv.txt:
        ##enable Generic eMMC Flasher:
        ##make sure, these tools are installed: dosfstools rsync
        cmdline=init=/opt/scripts/tools/eMMC/init-eMMC-flasher-v3.sh

    Reboot from the on-board flash.  The 4 user LEDs will flash in succession
    while the image is being written.  When complete, the LEDs will be off,
    and the board will be powered down automatically.  This can take up to ten
    minutes.

    Removed the micro-SD card and reboot from the on-board flash.

    TODO: how to modify /boot/uEnv.txt on the micro-SD card to disable the
    eMMC flasher.


================================================================================
================================================================================


7/8/2017 - Set up ic-patcon with new jessie image
=================================================

2/3/2018  ic-patcon is no longer used.  It and ic-widcon have been replaced
with ic-widpatcon on a Raspberry Pi 3.  The RPi3 has sufficient processing
power to run both widgetRcvr and patternController.

- Log in as user debian, password temppwd.

- Create user illumicone and add it to the sudo group.
  
    adduser illumicone
    sudo adduser illumicone sudo

- Change user debian's password to the same as illumicone's.

    passwd

- Remove the "default username:password" line from /etc/issue and
  /etc/issue.net.

- Set the host name to ic-patcon by changing all occurrences of "beaglebone"
  to "ic-patcon" in /etc/hostname and /etc/hosts.

- Assign the static IP address for ic-patcon.  jessie uses that fucking connman,
  so use this:

    sudo connmanctl services

  Note which service is ethernet_hexshit_cable.  Then,

    sudo connmanctl config ethernet_hexshit_cable --ipv4 manual 192.168.69.101 255.255.255.0 192.168.69.1 --nameservers 192.168.69.1 8.8.8.8
  
  Your ssh connection will go away because the address change will be immediate.

  The old way of modifying the eth0 section of /etc/network/interfaces doesn't
  work anymore.  For reference, here is what we used to use:

    auto eth0
    iface eth0 inet static
        address 192.168.69.101
        netmask 255.255.255.0
        network 192.168.69.0   <-- not sure if this is needed
        gateway 192.168.69.1

- Reboot then log in as illumicone.

- Create .bash_aliases, copy aliases from .bashrc.

- Do updates.

    sudo apt-get update
    sudo apt-get upgrade

- Set up ssh keys.

    ssh-keygen

    Add desired public keys to ~/.ssh/authorized_keys, and make sure that
    file's permissions are 600.

- Set up time zone and NTP.

    sudo apt-get install ntp

    Add this above the existing server lines in /etc/ntp.conf:

        # On Illumicone's LAN, ic-widcon has the RTC and is an NTP server.
        server 192.168.69.102
        server 192.168.69.103

    sudo rm /etc/localtime; sudo ln -s /usr/share/zoneinfo/America/Boise /etc/localtime

        --> Check this.  After reboot, /etc/timezone still says "Etc/UTC".
        But, the output from timedatectl looks correct.  Try this command
        instead:  sudo timedatectl set-timezone America/Boise

- Install psmisc to get the killall utility.

    sudo apt-get install psmisc

- Install git flow.

    sudo apt-get install git-flow

- Create the ~/devl directory.

- In ~/devl, clone the Illumicone project.

    git clone https://github.com/skipzone/Illumicone

- If using an SD card larger than 4 GB, expand the partition then reboot
  immediately afterward.

    (May need to do "git pull" in /opt/scripts/tools.)

    /opt/scripts/tools/grow_partition.sh


================================================================================
================================================================================


2/3/2018  The following procedure is obsolete.  It remains here for
reference, especially for setting up WiFi on a BeagleBone.

1/17/2016 (updated 6/21/2016)
=========

On a new BeagleBone Black that came with the 2015-03-01 image (Debian 4.6.3-14,
3.8.13-bone70) (using sudo for most things):

- apt-get update

- apt-get upgrade

- Edit .bashrc, enable aliases.  (Update 6/21/2016: Create .bash_aliases,
  copy aliases from .bashrc.)

- Edit boot/uEnv.txt, disable HDMI by un-commenting-out this line:
  #cape_disable=capemgr.disable_partno=BB-BONELT-HDMI,BB-BONELT-HDMIN
  uEnv.txt can be accessed by mounting /dev/mmcblk0p2.  (Update 6/21/2016:
  If booted from the onboard flash then that device is already mounted
  at /.)

- In /opt/scripts/tools, "git pull" then ./update_kernel.sh

- Edit /etc/network/interfaces, enable WiFi and eth0.  (If eth0 is not
  explicitly enabled, the Ethernet cable must be connected to the board
  before power-up.  (Update 6/21/2016:  That doesn’t appear to be true,
  at least when WiFi is not enabled.))

  Make sure the wlan0 section looks like this:

  auto wlan0
  iface wlan0 inet dhcp
      wpa-driver wext
      wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf

- Add this to /etc/wpa_supplicant/wpa_supplicant.conf (create the file
  if necessary):

  ctrl_interface=/var/run/wpa_supplicant

  network={
      ssid=“ssid1”
      psk=“password1”
      id_str=“netname1”
  }

  network={
      ssid=“ssid2”
      psk=“password2”
      id_str=“netname2”
  }

- sudo rm /etc/localtime; sudo ln -s /usr/share/zoneinfo/America/Boise /etc/localtime

- Install the wifi-reset service:  (Update 6/21/2016:  Probably don’t do
  this.  The service makes it take longer than fuck for the system to boot
  and LEDscape to start.  Also, it doesn’t appear to be necessary with the
  Edimax N150 (EW-7811Un).)

    - cd
    - git clone https://github.com/adafruit/wifi-reset.git
    - cd wifi-reset
    - sudo ./install.sh

  The wifi-reset service can be disabled with this command:

      sudo systemctl disable wifi-reset.service


Notes
-----

If the WiFi dongle is plugged in after the system is running, you must do
"sudo ifup wlan0" to make it associate with the WiFi network.

When using an SD card larger than 4 GB, use
/opt/scripts/tools/grow_partition.sh to expand the partition.  Reboot immediately afterward.


LEDscape Setup
--------------

- git clone git://github.com/Yona-Appletree/LEDscape

- cd LEDscape

- sudo cp /boot/dtbs/3.8.13-bone79/am335x-boneblack.dtb{,.originalBeforeLEDscape}

- sudo cp am335x-boneblack.dtb /boot/dtbs/3.8.13-bone79/

- sudo modprobe -v uio_pruss

- sudo reboot

- make

- sudo ./install-service.sh

The osresearch branch specifies this command, which seems to be unnecessary
for the Yona-Appletree branch:
echo 'options uio_pruss extram_pool_sz=0x800000' | sudo tee -a /etc/modprobe.d/ledscape.conf

================================================================================
================================================================================

