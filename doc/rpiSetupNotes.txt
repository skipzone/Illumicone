Set up ic-widpatcon on a Raspberry Pi 3 B or 4 using Raspbian Buster Lite
(updated 5 Aug. 2019)


-1.  Download Raspbian Buster Lite from here:

    https://downloads.raspberrypi.org/raspbian_lite_latest


0.  Write the image to a micro-SD card.

    diskutil list
    diskutil unmountDisk /dev/diskN
    sudo dd bs=1m if=2017-09-07-raspbian-stretch-lite.img of=/dev/rdiskN
    diskutil unmountDisk /dev/diskN

    It appears that the file system will be expanded automatically upon first
    boot.


1.  Create a file named ssh on the boot partition.

    The easiest way is to boot the RPi with an HDMI monitor connected.  User is
    pi, password is raspberry.  Otherwise, use a Linux VM to access the boot
    partition and create the file.
    
    If you have a monitor and keyboard connected to the RPi:

        sudo touch /boot/ssh
        sudo reboot

    If you are accessing the SD card via Ubuntu 14:

        touch /media/<your username>/boot/ssh

    There should be two USB drive icons in Launcher:  one for boot and one for
    rootfs.  Unmount the SD card by right clicking on one of the USB drive icons
    and selecting Eject Parent Volume.  Do the same thing for the other icon.


2.  Create user illumicone and add it to the sudo group.

    sudo adduser illumicone
    sudo adduser illumicone sudo


3.  Change user pi's password to be the same as illumicone's.

    passwd


3.5  Exit the ssh session then reconnect and log in as illumicone.


4.  Update everything.

    sudo apt-get update
    sudo apt-get upgrade


5.  Set up ssh keys.

    on development system:  scp ~/.ssh/id_rsa.pub illumicone@raspberrypi.local:myrsa.pub

    mkdir .ssh
    cd .ssh
    ssh-keygen
    mv ../myrsa.pub authorized_keys
    chmod 600 authorized_keys


6.  Use raspi-config to change the host name to ic-widpatcon.

    sudo raspi-config 
    Follow the bouncing ball.


7.  Set the time zone.

    sudo raspi-config
        4 Localisation Options
        I2 Change Timezone
        US
        Mountain

    If using the local console (HDMI and keyboard), it would be a good idea to
    change the keyboard to a US layout.  It would also be a good idea to
    change the Wi-Fi country.


8.  Install required and useful packages.

    sudo apt-get install vim psmisc git git-flow lsof dnsutils

    (psmisc gives us the killall utility.)


9.  Set up I2C.

    sudo apt-get install python-smbus i2c-tools

    sudo raspi-config
        5 Interfacing Options
        P5 I2C
        Yes (to enable the ARM I2C interface)
    Reboot.

    Make illumicone a member of the i2c group.
        sudo usermod -aG i2c illumicone
    Log out and back in.

    Check if I2C is working:
        i2cdetect -y 1


10. Set up SPI.

    sudo raspi-config
        5 Interfacing Options
        P4 SPI
        Yes (to enable the SPI interface)
    Reboot.

    Make illumicone a member of the spi group.
        sudo usermod -aG spi illumicone
    Log out and back in.


10.5.  Make illumicone a member of the gpio group.

    sudo usermod -aG gpio illumicone


11.  Set up the RTC.

    Add these lines to the end of /boot/config.txt, then un-commentout the
    one that matches the installed RTC module:
        #dtoverlay=i2c-rtc,ds1307
        #dtoverlay=i2c-rtc,ds3231
        #dtoverlay=i2c-rtc,pcf8523
        #dtoverlay=i2c-rtc,pcf8563
    Reboot.

    Check if RTC is present:
        i2cdetect -y 1
        Look for UU at address 0x68 (0x51 for PCF8563).

    Disable the fake hwclock.
        sudo apt-get -y remove fake-hwclock
        sudo update-rc.d -f fake-hwclock remove

    Comment out these three lines in /lib/udev/hwclock-set:
        #if [ -e /run/systemd/system ] ; then
        # exit 0
        #fi
    Also may need to comment out the two lines with --systz.  Adafruit (where
    these steps came from) says nothing about that, but Durham's "Raspberry Pi
    2 in a Pieshell" says to do that.

    Set the system time (UTC), or allow it to be set from a network source.
        sudo date --set="2017-09-16 02:44:38"

    Write the current system time to the RTC:
        sudo hwclock -w

    To read the time directly from the RTC (with debug output):
        sudo hwclock -r --verbose

    To copy the time from the clock module to the system clock:
        sudo hwclock -s


12.  If using the Sunfounder PCF8563 RTC module with DS18B20 temperature
     sensor, enable 1-Wire support.

    Add this line to /boot/config.txt:
        dtoverlay=w1-gpio
    Reboot.
    (May also be able to do this through raspi-config.)

    Use lsmod to verify that the w1-gpio and w1-therm modules are loaded.

    Look in /sys/bus/w1/devices for a directory name starting with 28-xxx,
    where xxx is the serial number of the DS18B20 device.  Example:
        illumicone@ic-widpatcon:~ $ ls /sys/bus/w1/devices
        28-0416b35037ff  w1_bus_master1

    To read the device, Use cat to read the w1_slave file in the directory.
        illumicone@ic-widpatcon:~ $ cat /sys/bus/w1/devices/28-0416b35037ff/w1_slave 
        f8 01 4b 46 1f ff 1f 10 d1 : crc=d1 YES
        f8 01 4b 46 1f ff 1f 10 d1 t=31500

    t is the temperature in degrees C * 1000.  So, in the above example, the
    temperature is 31.5 C (88.7 F).


13.  Set up NTP server.

    sudo apt-get install ntp

    Merge the differences between ~/devl/Illumicone/config/ntp_server.conf and
    /etc/ntp.conf.


14.  Add these lines to the end of ~/.profile:

    # Set up Illumicone paths.
    export ILLUMICONE_BIN="$HOME/bin"
    export ILLUMICONE_LOGS="$HOME/logs"
    export ILLUMICONE_DEVL="$HOME/devl/Illumicone"
    export ILLUMICONE_CONFIG="$ILLUMICONE_DEVL/config"
    export ILLUMICONE_SBIN="$ILLUMICONE_DEVL/sbin"
    PATH="$ILLUMICONE_BIN:$ILLUMICONE_SBIN:$PATH"


15.  Set up the Illumicone development environment.

    git config --global user.email "illumicone@gmail.com"
    git config --global user.name "illumicone"
    git config --global core.editor "vim"
    cd
    mkdir devl
    cd devl
    git clone https://github.com/skipzone/Illumicone
    cd Illumicone
    git flow init
    cd
    cp devl/Illumicone/config/vimrc ~/.vimrc
    cp devl/Illumicone/sbin/bash_aliases ~/.bash_aliases
    cp devl/Illumicone/sbin/illumicone_aliases ~/.illumicone_aliases


16.  Install RF24

    Use tmrh20's fork of RF24.  This is the same one we use for the widget Arduinos.

    cd ~/devl
    git clone https://github.com/nRF24/RF24.git
    cd RF24
    ./configure --driver=SPIDEV  (this allows widgetRcvr to be run without sudo)
    make
    sudo make install


17.  Build and install the Illumicone programs.

    cd
    mkdir bin
    mkdir logs
    cd devl/Illumicone/src
    make
    make install
    cd
    ln -s devl/Illumicone/config/<someConfig>.json activeConfig.json


18.  Set up Wi-Fi to access the development network.

    Use raspi-config to set the country.
        4 Localisation Options
        I4 Change Wi-Fi Country
        US

    To see what networks are visible:
        sudo iwlist wlan0 scan
        sudo wpa_cli scan_results

    Add this to /etc/wpa_supplicant/wpa_supplicant.conf:
        network={
                ssid="thessid"
                psk="thepassword"
        }
    Or, decrypt ~devl/Illumicone/config/wpa_supplicant.conf.gpg into
    wpa_supplicant.conf, copy the file to /etc/wpa_supplicant, and set its
    permissions to 600.

    Use ifconfig to see if the connection was successful.

    wpa-supplicant should notice the change.  If it doesn't, try this:
        sudo wpa_cli
            interface wlan0
            reconfigure

    If that doesn't work, reboot.

    Another way to do this is to use the wpa_passphrase utility:
        wpa_passphrase "thessid" "thepassword" | sudo tee -a /etc/wpa_supplicant/wpa_supplicant.conf > /dev/null
    Then, edit wpa_supplicant.conf and removed the commented-out password.

    This might help with hidden networks:
        scan_ssid=1

    Add this when configuring multiple networks (higher priority value means
    more preferred):
        priority=1
        id_str="networkOne"
        ...
        priority=2
        id_str="networkTwo"

    For unsecured networks, use this instead of psk:
        key_mgmt=NONE


19.  Assign static IP address 192.168.69.103 for ic-widpatcon on wired network.

    Add this to /etc/dhcpcd.conf (note the extra "c" in the file name):
        # Assign a lower metric to wlan0 to encourage using it for Internet requests.
        interface wlan0
        metric 200
        # Use a static IP address on the Illumicone network.
        interface eth0
        static ip_address=192.168.69.103/24
        static routers=192.168.69.1
        static domain_name_servers=208.67.222.222 192.168.69.1
        metric 300


20.  Set up illumicone's crontab.

    crontab ~/devl/Illumicone/config/widpatcon_crontab


21.  If using the Sunfounder PCF8563 RTC module with DS18B20 temperature sensor,
     enable this line in the crontab:

         *  *  *  * *  . $HOME/.profile; $ILLUMICONE_SBIN/readDS18B20Temperature >> $ILLUMICONE_LOGS/temperature.log


22.  Set up the script to read CPU temperature (RPi 4 only).

    Using visudo, add this line to /etc/sudoers:

        illumicone ALL=(root) NOPASSWD: /home/illumicone/devl/Illumicone/sbin/readCpuTemperature

    Then, enable this line in the crontab:

        *  *  *  * *  . $HOME/.profile; sudo $ILLUMICONE_SBIN/readCpuTemperature >> $ILLUMICONE_LOGS/cpuTemperature.log


23.  Follow the instructions in config/patternController.service and
     config/widgetRcvr.service to set up those services.


================================================================================

Useful Commands and Stuff
-------------------------

* Networking

    View kernel routing table:  route -n

    Change config without reboot:
        sudo systemctl daemon-reload
        sudo systemctl restart dhcpcd

* Wi-Fi

    status:  sudo wpa_cli status
    view detected networks:  sudo wpa_cli scan_results
    re-read configuration:  sudo wpa_cli reconfigure

    wpa_cli may not default to the correct interface.  If you don't see
    reasonable results to the above commands, run wpa_cli interactively, use
    "interface wlan0" to select the built-in Wi-Fi interface, then execute the
    above commands in the interactive session.

* Shrink image file

    raspbian-shrink is a nice script for shrinking an RPi (or BBB) image file.
    It runs fine under Ubuntu 14.04.  You can get it here:

    https://github.com/aoakley/cotswoldjam.git

    Or, use the skipzone fork to get a fix for the extra space between "83" and
    "Linux" in fdisk output on Ubuntu 14.04.3.

* Updates

    sudo nohup apt-get update --yes > update.out 2>update.err &
    sudo nohup apt-get upgrade --yes > upgrade.out 2>upgrade.err &

* github certificate problem

    If you get this when doing "git pull":

        fatal: unable to access 'https://github.com/skipzone/Illumicone/':
        server certificate verification failed. CAfile:
        /etc/ssl/certs/ca-certificates.crt CRLfile: none

    Make sure the system clock is correct.  If that doesn't help, do this:

        sudo apt-get install --reinstall ca-certificates

* restart NTP server

    sudo /etc/init.d/ntp restart

